"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Filter=function(e){this.table=e,this.filterList=[],this.headerFilters={},this.headerFilterElements=[],this.changed=!1};Filter.prototype.initializeColumn=function(e){function t(t){var i,n="input"==a&&"text"==f?"partial":"match";if(t){switch(_typeof(e.definition.headerFilterFunc)){case"string":s.filters[e.definition.headerFilterFunc]&&(i=function(i){return s.filters[e.definition.headerFilterFunc](t,e.getFieldValue(i))});break;case"function":i=function(i){return e.definition.headerFilterFunc(t,e.getFieldValue(i),i,e.definition.headerFilterFuncParams||{})}}if(!i)switch(n){case"partial":i=function(i){return String(e.getFieldValue(i)).toLowerCase().indexOf(String(t).toLowerCase())>-1};break;default:i=function(i){return e.getFieldValue(i)==t}}s.headerFilters[u]={value:t,func:i}}else delete s.headerFilters[u];s.changed=!0,s.table.rowManager.filterRefresh()}var i,n,r,o,l,a,f,s=this,u=e.getField();if(u){switch(i=$("<div class='tabulator-header-filter'></div>"),_typeof(e.definition.headerFilter)){case"string":s.table.extensions.edit.editors[e.definition.headerFilter]&&(n=s.table.extensions.edit.editors[e.definition.headerFilter]);break;case"function":n=e.definition.headerFilter;break;case"boolean":n=e.extensions.edit&&e.extensions.edit.editor?e.extensions.edit.editor:e.definition.formatter&&s.table.extensions.edit.editors[e.definition.formatter]?s.table.extensions.edit.editors[e.definition.formatter]:s.table.extensions.edit.editors.input}n&&(o={getValue:function(){return""},getElement:function(){return i}},r=n.call(s,o,function(){},t,function(){},e.definition.headerFilterParams||{}),u?s.table.extensions.localize.bind("headerFilters.columns."+e.definition.field,function(e){r.attr("placeholder",void 0!==e&&e?e:s.table.extensions.localize.getText("headerFilters.default"))}):s.table.extensions.localize.bind("headerFilters.default",function(e){r.attr("placeholdder",void 0!==s.column.definition.headerFilterPlaceholder&&s.column.definition.headerFilterPlaceholder?s.column.definition.headerFilterPlaceholder:e)}),r.on("click",function(e){e.stopPropagation(),$(this).focus()}),l=!1,r.on("keyup search",function(e){var i=$(this);l&&clearTimeout(l),l=setTimeout(function(){t(i.val())},300)}),"number"==(f=r.attr("type")?r.attr("type").toLowerCase():"")&&r.on("change",function(e){t($(this).val())}),"text"==f&&(r.attr("type","search"),r.off("change blur")),"input"!=(a=r.prop("tagName").toLowerCase())&&"select"!=a||r.on("mousedown",function(e){e.stopPropagation()}),i.append(r),e.contentElement.append(i),s.headerFilterElements.push(r))}},Filter.prototype.hasChanged=function(){var e=this.changed;return this.changed=!1,e},Filter.prototype.setFilter=function(e,t,i){var n=this;n.filterList=[],Array.isArray(e)||(e=[{field:e,type:t,value:i}]),n.addFilter(e)},Filter.prototype.addFilter=function(e,t,i){var n,r=this;Array.isArray(e)||(e=[{field:e,type:t,value:i}]),e.forEach(function(e){var t=!1;"function"==typeof e.field?t=function(t){return e.field(t,e.type||{})}:r.filters[e.type]&&(t=(n=r.table.columnManager.getColumnByField(e.field))?function(t){return r.filters[e.type](e.value,n.getFieldValue(t))}:function(t){return r.filters[e.type](e.value,t[e.field])}),t&&(e.func=t,r.filterList.push(e),r.changed=!0)})},Filter.prototype.getFilter=function(){var e=[];return this.filterList.forEach(function(t){e.push({field:t.field,type:t.type,value:t.value})}),e},Filter.prototype.removeFilter=function(e,t,i){var n=this;Array.isArray(e)||(e=[{field:e,type:t,value:i}]),e.forEach(function(e){var t=-1;(t="object"==_typeof(e.field)?n.filterList.findIndex(function(t){return e===t}):n.filterList.findIndex(function(t){return e.field===t.field&&e.type===t.type&&e.value===t.value}))>-1&&(n.filterList.splice(t,1),n.changed=!0)})},Filter.prototype.clearFilter=function(e){this.filterList=[],e&&this.clearHeaderFilter(),this.changed=!0},Filter.prototype.clearHeaderFilter=function(){this.headerFilters={},this.headerFilterElements.forEach(function(e){e.val("")}),self.changed=!0},Filter.prototype.filter=function(e){var t=this,i=[],n=[];return t.table.options.dataFiltering&&t.table.options.dataFiltering(t.getFilter()),t.table.options.ajaxFiltering||!t.filterList.length&&!Object.keys(t.headerFilters).length?i=e.slice(0):e.forEach(function(e){t.filterRow(e)&&i.push(e)}),t.table.options.dataFiltered&&(i.forEach(function(e){n.push(e.getComponent())}),t.table.options.dataFiltered(t.getFilter(),n)),i},Filter.prototype.filterRow=function(e){var t=this,i=!0,n=e.getData();t.filterList.forEach(function(e){e.func(n)||(i=!1)});for(var r in t.headerFilters)t.headerFilters[r].func(n)||(i=!1);return i},Filter.prototype.filters={"=":function(e,t){return t==e},"<":function(e,t){return t<e},"<=":function(e,t){return t<=e},">":function(e,t){return t>e},">=":function(e,t){return t>=e},"!=":function(e,t){return t!=e},like:function(e,t){return null===e?t===e:t.toLowerCase().indexOf(e.toLowerCase())>-1}},Tabulator.registerExtension("filter",Filter);